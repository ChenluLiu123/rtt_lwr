<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="load_base" default="false"/>
    <xacro:arg name="load_ati_sensor" default="false"/>
    <xacro:arg name="load_calib_tool" default="false"/>
    <xacro:arg name="load_handle" default="false"/>
    <xacro:arg name="load_hook" default="false"/>
    <xacro:arg name="robot_name" default="lwr"/>

    <xacro:macro name="gz_ft_sensor" params="joint_name">
        <gazebo>
            <plugin name="ft_sensor_${joint_name}" filename="libgazebo_ros_ft_sensor.so">
                <jointName>${joint_name}</jointName>
                <topicName>~/ft_sensor_${joint_name}</topicName>
                <updateRate>1000</updateRate>
                <gaussianNoise>0.0001</gaussianNoise>
            </plugin>
        </gazebo>
     </xacro:macro>

	<xacro:macro  name="gz_joint" params="joint_name">
		<gazebo reference="${joint_name}">
			<provideFeedback>true</provideFeedback>
            <!-- Dangerous option :) -->
			<!--implicitSpringDamper>true</implicitSpringDamper-->
                        <!--stopCfm>0.9</stopCfm-->
                        <!--stopErp>0.5</stopErp-->
		</gazebo>
	</xacro:macro>

	<xacro:macro name="lwr_gazebo">
		<!-- <gazebo>
			<plugin name="rtt_gazebo" filename="librtt_gazebo_deployer.so">
			  <component>
			    <package>rtt_lwr_sim</package>
			    <type>lwr::LWRSim</type>
			    <name>$(arg robot_name)</name>
			  </component>
			    <orocosScript>
                    <inline>
                        require("print");
                        import("rtt_ros");

                        ros.import("rtt_geometry_msgs");
                        ros.import("kdl_typekit");
                        ros.import("eigen_typekit");
                        import("rtt_rosparam");
                        import("rtt_roscomm");
                        import("rtt_rospack");
                        ros.import("kuka_lwr_fri");
                        ros.import("lwr_fri");
                        import("lwr_launch");
                        runScript("$(find lwr_launch)"+"/scripts/lwr_loader.ops");

                        setActivity("$(arg robot_name)",0,HighestPriority,ORO_SCHED_RT);

                        $(arg robot_name).configure();
                        $(arg robot_name).synchronize_with_commands = true;

                        stream("$(arg robot_name).JointStates",ros.comm.topic("$(arg robot_name)/joint_states"));
                        stream("$(arg robot_name).JointStatesCommand",ros.comm.topic("$(arg robot_name)/joint_states_cmd"));
                        stream("$(arg robot_name).JointStatesDynamicsDecomposition",ros.comm.topic("$(arg robot_name)/joint_states_dynamics"));
                        stream("$(arg robot_name).CartesianPosition",ros.comm.topic("$(arg robot_name)/cartesian_pose"));

                        /*loadService("$(arg robot_name)","sim_clock_activity");*/
                        loadService("$(arg robot_name)","rosservice");
                        $(arg robot_name).rosservice.connect("ready","$(arg robot_name)/ready", "std_srvs/Empty");

                        $(arg robot_name).setLinkGravityMode("ati_link",false);

                        $(arg robot_name).start();

                        if($(arg robot_name).isRunning()) then{print.ln("\033[32;1m[Info][$(arg robot_name)] Gazebo component running \033[0m\n")};
                        if(!$(arg robot_name).isRunning()) then{print.ln("\033[31;1m[ERROR][$(arg robot_name)] Gazebo component NOT running \033[0m\n")};
                    </inline>
                </orocosScript>
			</plugin>
  		</gazebo> -->

		<!-- ati_sensor (need gazebo >4.0, see ati_sensor.urdf.xacro) -->
		<xacro:if value="$(arg load_ati_sensor)">

                    <!-- Use a fixed joint in gazebo -->
                    <gazebo reference="ati_base_joint">
                        <disableFixedJointLumping>true</disableFixedJointLumping>
                    </gazebo>

                    <gazebo reference="ati_joint">
			<provideFeedback>true</provideFeedback>
                        <disableFixedJointLumping>true</disableFixedJointLumping>
                    </gazebo>

                    <gazebo reference="ati_base_link">
                        <material>Gazebo/Grey</material>
                    </gazebo>

                    <gazebo reference="ati_link">
                        <!-- gravity tag does not work for some reason ,
                        so we have to update the lwr_gazebo ops
                        with lwr_gazebo.setLinkGravityMode("ati_link",false) -->

                        <gravity>false</gravity>
                        <material>Gazebo/Grey</material>
                    </gazebo>

                    <gazebo>
                        <plugin name="ft_sensor" filename="libgazebo_ros_ft_sensor.so">
                            <robotNamespace>ft_sensor</robotNamespace>
                            <jointName>ati_joint</jointName>
                            <topicName>wrench</topicName>
                            <updateRate>1000</updateRate>
                            <gaussianNoise>0.0001</gaussianNoise>
                        </plugin>
                    </gazebo>
		</xacro:if>
            <!--gazebo>
    			<plugin name="gz_state_pub" filename="libgazebo_ros_joint_state_publisher.so">
                  <jointName>joint_0,joint_1,joint_2,joint_3,joint_4,joint_5,joint_6</jointName>
    			  <updateRate>100</updateRate>
                  <alwaysOn>true</alwaysOn>
    			</plugin>
            </gazebo-->

                <xacro:if value="$(arg load_handle)">
                    <gazebo reference="handle_link">
                        <material>Gazebo/White</material>
                    </gazebo>
                </xacro:if>

                <xacro:if value="$(arg load_base)">
                    <gazebo reference="base_link">
                        <material>Gazebo/Grey</material>
                    </gazebo>
                </xacro:if>

                <!-- base_link and link_0 are fixed, so merged by gazebo -->
                <xacro:unless value="$(arg load_base)">
                    <gazebo reference="base_link">
                        <material>Gazebo/Orange</material>
                    </gazebo>
                </xacro:unless>

                <xacro:if value="$(arg load_calib_tool)">
                    <gazebo reference="calib_link">
                        <material>Gazebo/White</material>
                    </gazebo>
                </xacro:if>

  		<xacro:gz_joint joint_name="joint_0"/>
  		<xacro:gz_joint joint_name="joint_1"/>
  		<xacro:gz_joint joint_name="joint_2"/>
  		<xacro:gz_joint joint_name="joint_3"/>
  		<xacro:gz_joint joint_name="joint_4"/>
  		<xacro:gz_joint joint_name="joint_5"/>
  		<xacro:gz_joint joint_name="joint_6"/>

        <!--xacro:gz_ft_sensor joint_name="joint_0"/-->
        <!--xacro:gz_ft_sensor joint_name="joint_1"/-->
        <!--xacro:gz_ft_sensor joint_name="joint_2"/-->
        <!--xacro:gz_ft_sensor joint_name="joint_3"/-->
        <!--xacro:gz_ft_sensor joint_name="joint_4"/-->
        <!--xacro:gz_ft_sensor joint_name="joint_5"/-->
        <!--xacro:gz_ft_sensor joint_name="joint_6"/-->

		<gazebo reference="link_1">
			<material>Gazebo/Orange</material>
		</gazebo>

		<gazebo reference="link_2">
			<material>Gazebo/Orange</material>
		</gazebo>

		<gazebo reference="link_3">
			<material>Gazebo/Orange</material>
		</gazebo>

		<gazebo reference="link_4">
			<material>Gazebo/Orange</material>
		</gazebo>

		<gazebo reference="link_5">
			<material>Gazebo/Orange</material>
		</gazebo>

		<gazebo reference="link_6">
			<material>Gazebo/Grey</material>
		</gazebo>

		<gazebo reference="link_7">
			<material>Gazebo/DarkGrey</material>
		</gazebo>

	</xacro:macro>

</robot>
